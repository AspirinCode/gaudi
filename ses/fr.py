import cPickle, base64
try:
	from SimpleSession.versions.v58 import beginRestore,\
	    registerAfterModelsCB, reportRestoreError, checkVersion
except ImportError:
	from chimera import UserError
	raise UserError('Cannot open session that was saved in a'
	    ' newer version of Chimera; update your version')
checkVersion([1, 8, 1, 39231])
import chimera
from chimera import replyobj
replyobj.status('Restoring session...', \
    blankAfter=0)
replyobj.status('Beginning session restore...', \
    blankAfter=0, secondary=True)
beginRestore()

def restoreCoreModels():
	from SimpleSession.versions.v58 import init, restoreViewer, \
	     restoreMolecules, restoreColors, restoreSurfaces, \
	     restoreVRML, restorePseudoBondGroups, restoreModelAssociations
	molInfo = cPickle.loads(base64.b64decode(''))
	resInfo = cPickle.loads(base64.b64decode('gAJ9cQEoVQZpbnNlcnRxAksCVQEgfYdVC2ZpbGxEaXNwbGF5cQNLAol9h1UEbmFtZXEESwJYAwAAAFVOS32HVQVjaGFpbnEFSwJYAQAAAEF9cQZYAwAAAGhldE5dcQdLAUsBhnEIYYZzh1UOcmliYm9uRHJhd01vZGVxCUsCSwJ9h1UCc3NxCksCiYmGfYdVCG1vbGVjdWxlcQtLAksAfXEMSwFOXXENSwFLAYZxDmGGc4dVC3JpYmJvbkNvbG9ycQ9LAk59h1UFbGFiZWxxEEsCWAAAAAB9h1UKbGFiZWxDb2xvcnERSwJOfYdVCGZpbGxNb2RlcRJLAksBfYdVBWlzSGV0cRNLAoh9h1ULbGFiZWxPZmZzZXRxFEsCTn2HVQhwb3NpdGlvbnEVXXEWKE2QAUsBhnEXSwFLAYZxGGVVDXJpYmJvbkRpc3BsYXlxGUsCiX2HVQhvcHRpb25hbHEafVUEc3NJZHEbSwJK/////32HdS4='))
	atomInfo = cPickle.loads(base64.b64decode('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'))
	bondInfo = cPickle.loads(base64.b64decode('gAJ9cQEoVQVhdG9tc3ECXXEDKF1xBChLBksHZV1xBShLBksIZV1xBihLBksLZV1xByhLB0sKZV1xCChLCUsOZV1xCShLCUsUZV1xCihLCksOZV1xCyhLCksRZV1xDChLC0sRZV1xDShLDEsaZV1xDihLDUsQZV1xDyhLDUsSZV1xEChLDUsTZV1xEShLDUsgZV1xEihLD0saZV1xEyhLD0sbZV1xFChLEUsUZV1xFShLEksrZV1xFihLFEsWZV1xFyhLFUssZV1xGChLFksXZV1xGShLF0sYZV1xGihLGEsZZV1xGyhLGUsaZV1xHChLG0scZV1xHShLG0seZV1xHihLHEsdZV1xHyhLHUsgZV1xIChLHksfZV1xIShLH0sgZV1xIihLIUsiZV1xIyhLIUslZV1xJChLIUsmZV1xJShLIksjZV1xJihLIksnZV1xJyhLI0skZV1xKChLI0soZV1xKShLJEslZV1xKihLJEspZV1xKyhLJUsqZV1xLChLK0ssZV1xLShLLUsuZV1xLihLLUsvZV1xLyhLL0swZV1xMChLMUsvZV1xMShLMUsyZV1xMihLM0sxZV1xMyhLM0s0ZV1xNChLNUszZV1xNShLNUs2ZV1xNihLN0s1ZV1xNyhLN0s4ZV1xOChLLUs3ZWVVBWxhYmVscTlLNVgAAAAAfYdVBnJhZGl1c3E6SzVHP8mZmaAAAAB9h1ULbGFiZWxPZmZzZXRxO0s1Tn2HVQhkcmF3TW9kZXE8SzVLAX2HVQhvcHRpb25hbHE9fVUHZGlzcGxheXE+SzVLAn2HdS4='))
	crdInfo = cPickle.loads(base64.b64decode('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'))
	surfInfo = {'category': (0, None, {}), 'probeRadius': (0, None, {}), 'pointSize': (0, None, {}), 'name': [], 'density': (0, None, {}), 'colorMode': (0, None, {}), 'useLighting': (0, None, {}), 'transparencyBlendMode': (0, None, {}), 'molecule': [], 'smoothLines': (0, None, {}), 'lineWidth': (0, None, {}), 'allComponents': (0, None, {}), 'twoSidedLighting': (0, None, {}), 'customVisibility': [], 'drawMode': (0, None, {}), 'display': (0, None, {}), 'customColors': []}
	vrmlInfo = {'subid': (0, None, {}), 'display': (0, None, {}), 'id': (0, None, {}), 'vrmlString': [], 'name': (0, None, {})}
	colors = {'Ru': ((0.141176, 0.560784, 0.560784), 1, u'default'), 'Re': ((0.14902, 0.490196, 0.670588), 1, u'default'), 'Rf': ((0.8, 0, 0.34902), 1, u'default'), 'Ra': ((0, 0.490196, 0), 1, u'default'), 'Rb': ((0.439216, 0.180392, 0.690196), 1, u'default'), 'Rn': ((0.258824, 0.509804, 0.588235), 1, u'default'), 'Rh': ((0.0392157, 0.490196, 0.54902), 1, u'default'), 'Be': ((0.760784, 1, 0), 1, u'default'), 'Ba': ((0, 0.788235, 0), 1, u'default'), 'Bh': ((0.878431, 0, 0.219608), 1, u'default'), 'Bi': ((0.619608, 0.309804, 0.709804), 1, u'default'), 'Bk': ((0.541176, 0.309804, 0.890196), 1, u'default'), 'Br': ((0.65098, 0.160784, 0.160784), 1, u'default'), 'H': ((1, 1, 1), 1, u'default'), 'P': ((1, 0.501961, 0), 1, u'default'), 'Os': ((0.14902, 0.4, 0.588235), 1, u'default'), 'Ge': ((0.4, 0.560784, 0.560784), 1, u'default'), 'Gd': ((0.270588, 1, 0.780392), 1, u'default'), 'Ga': ((0.760784, 0.560784, 0.560784), 1, u'default'), 'Pr': ((0.85098, 1, 0.780392), 1, u'default'), 'Pt': ((0.815686, 0.815686, 0.878431), 1, u'default'), 'Pu': ((0, 0.419608, 1), 1, u'default'),
'C': ((0.564706, 0.564706, 0.564706), 1, u'default'), 'Pb': ((0.341176, 0.34902, 0.380392), 1, u'default'), 'Pa': ((0, 0.631373, 1), 1, u'default'), 'Pd': ((0, 0.411765, 0.521569), 1, u'default'), 'Cd': ((1, 0.85098, 0.560784), 1, u'default'), 'Po': ((0.670588, 0.360784, 0), 1, u'default'), 'Pm': ((0.639216, 1, 0.780392), 1, u'default'), 'Hs': ((0.901961, 0, 0.180392), 1, u'default'), 'Ho': ((0, 1, 0.611765), 1, u'default'), 'Hf': ((0.301961, 0.760784, 1), 1, u'default'), 'Hg': ((0.721569, 0.721569, 0.815686), 1, u'default'), 'He': ((0.85098, 1, 1), 1, u'default'), 'Md': ((0.701961, 0.0509804, 0.65098), 1, u'default'), 'Mg': ((0.541176, 1, 0), 1, u'default'), 'K': ((0.560784, 0.25098, 0.831373), 1, u'default'), 'Mn': ((0.611765, 0.478431, 0.780392), 1, u'default'), 'O': ((1, 0.0509804, 0.0509804), 1, u'default'), 'Mt': ((0.921569, 0, 0.14902), 1, u'default'), 'S': ((1, 1, 0.188235), 1, u'default'), 'W': ((0.129412, 0.580392, 0.839216), 1, u'default'), 'sky blue': ((0.529412, 0.807843, 0.921569), 1, u'default'), 'Zn': ((0.490196, 0.501961, 0.690196), 1, u'default'),
'Eu': ((0.380392, 1, 0.780392), 1, u'default'), 'Zr': ((0.580392, 0.878431, 0.878431), 1, u'default'), 'Er': ((0, 0.901961, 0.458824), 1, u'default'), 'Ni': ((0.313725, 0.815686, 0.313725), 1, u'default'), 'No': ((0.741176, 0.0509804, 0.529412), 1, u'default'), 'Na': ((0.670588, 0.360784, 0.94902), 1, u'default'), 'Nb': ((0.45098, 0.760784, 0.788235), 1, u'default'), 'Nd': ((0.780392, 1, 0.780392), 1, u'default'), 'Ne': ((0.701961, 0.890196, 0.960784), 1, u'default'), 'Np': ((0, 0.501961, 1), 1, u'default'), 'Fr': ((0.258824, 0, 0.4), 1, u'default'), 'Fe': ((0.878431, 0.4, 0.2), 1, u'default'), 'Fm': ((0.701961, 0.121569, 0.729412), 1, u'default'), 'B': ((1, 0.709804, 0.709804), 1, u'default'), 'F': ((0.564706, 0.878431, 0.313725), 1, u'default'), 'Sr': ((0, 1, 0), 1, u'default'), 'N': ((0.188235, 0.313725, 0.972549), 1, u'default'), 'Kr': ((0.360784, 0.721569, 0.819608), 1, u'default'), 'Si': ((0.941176, 0.784314, 0.627451), 1, u'default'), 'Sn': ((0.4, 0.501961, 0.501961), 1, u'default'), 'Sm': ((0.560784, 1, 0.780392), 1, u'default'), 'V': ((0.65098, 0.65098, 0.670588), 1, u'default'),
'Sc': ((0.901961, 0.901961, 0.901961), 1, u'default'), 'Sb': ((0.619608, 0.388235, 0.709804), 1, u'default'), 'Sg': ((0.85098, 0, 0.270588), 1, u'default'), 'Se': ((1, 0.631373, 0), 1, u'default'), 'Co': ((0.941176, 0.564706, 0.627451), 1, u'default'), 'Cm': ((0.470588, 0.360784, 0.890196), 1, u'default'), 'Cl': ((0.121569, 0.941176, 0.121569), 1, u'default'), 'Ca': ((0.239216, 1, 0), 1, u'default'), 'Cf': ((0.631373, 0.211765, 0.831373), 1, u'default'), 'Ce': ((1, 1, 0.780392), 1, u'default'), 'Xe': ((0.258824, 0.619608, 0.690196), 1, u'default'), 'Tm': ((0, 0.831373, 0.321569), 1, u'default'), 'Cs': ((0.341176, 0.0901961, 0.560784), 1, u'default'), 'Cr': ((0.541176, 0.6, 0.780392), 1, u'default'), 'Cu': ((0.784314, 0.501961, 0.2), 1, u'default'), 'La': ((0.439216, 0.831373, 1), 1, u'default'), 'Li': ((0.8, 0.501961, 1), 1, u'default'), 'Tl': ((0.65098, 0.329412, 0.301961), 1, u'default'), 'Lu': ((0, 0.670588, 0.141176), 1, u'default'), 'Lr': ((0.780392, 0, 0.4), 1, u'default'), 'Th': ((0, 0.729412, 1), 1, u'default'), 'Ti': ((0.74902, 0.760784, 0.780392), 1, u'default'),
'tan': ((0.823529, 0.705882, 0.54902), 1, u'default'), 'Te': ((0.831373, 0.478431, 0), 1, u'default'), 'Tb': ((0.188235, 1, 0.780392), 1, u'default'), 'Tc': ((0.231373, 0.619608, 0.619608), 1, u'default'), 'Ta': ((0.301961, 0.65098, 1), 1, u'default'), 'Yb': ((0, 0.74902, 0.219608), 1, u'default'), 'Db': ((0.819608, 0, 0.309804), 1, u'default'), 'Dy': ((0.121569, 1, 0.780392), 1, u'default'), 'At': ((0.458824, 0.309804, 0.270588), 1, u'default'), 'I': ((0.580392, 0, 0.580392), 1, u'default'), 'medium purple': ((0.576471, 0.439216, 0.858824), 1, u'default'), 'U': ((0, 0.560784, 1), 1, u'default'), 'Y': ((0.580392, 1, 1), 1, u'default'), 'Ac': ((0.439216, 0.670588, 0.980392), 1, u'default'), 'Ag': ((0.752941, 0.752941, 0.752941), 1, u'default'), 'Ir': ((0.0901961, 0.329412, 0.529412), 1, u'default'), 'Am': ((0.329412, 0.360784, 0.94902), 1, u'default'), 'Al': ((0.74902, 0.65098, 0.65098), 1, u'default'), 'As': ((0.741176, 0.501961, 0.890196), 1, u'default'), 'Ar': ((0.501961, 0.819608, 0.890196), 1, u'default'), 'Au': ((1, 0.819608, 0.137255), 1, u'default'),
'Es': ((0.701961, 0.121569, 0.831373), 1, u'default'), 'In': ((0.65098, 0.458824, 0.45098), 1, u'default'), 'Mo': ((0.329412, 0.709804, 0.709804), 1, u'default')}
	materials = {u'default': ((0.85, 0.85, 0.85), 30)}
	pbInfo = {'category': [u'coordination complexes of ligand.pdb (#0)', u'distance monitor'], 'bondInfo': [{'color': (8, None, {}), 'atoms': [[5, 4], [5, 21], [5, 18], [5, 37], [5, 33], [5, 34], [5, 35], [5, 36]], 'label': (8, u'', {}), 'halfbond': (8, False, {}), 'labelColor': (8, None, {}), 'drawMode': (8, 0, {}), 'display': (8, 2, {})}, {'color': (0, None, {}), 'atoms': [], 'label': (0, None, {}), 'halfbond': (0, None, {}), 'labelColor': (0, None, {}), 'drawMode': (0, None, {}), 'display': (0, None, {})}], 'lineType': (2, 2, {}), 'color': (2, 9, {10: [1]}), 'optional': {'fixedLabels': (True, False, (2, False, {None: [0]}))}, 'display': (2, True, {}), 'showStubBonds': (2, False, {}), 'lineWidth': (2, 1, {2: [0]}), 'stickScale': (2, 1, {}), 'id': [0, -2]}
	modelAssociations = {0: [118]}
	colorInfo = (12, (u'Ir', (0.0901961, 0.329412, 0.529412, 1)), {(u'S', (1, 1, 0.188235, 1)): [6], (u'medium purple', (0.576471, 0.439216, 0.858824, 1)): [9], (u'N', (0.188235, 0.313725, 0.972549, 1)): [4], (u'Cl', (0.121569, 0.941176, 0.121569, 1)): [2], (u'green', (0, 1, 0, 1)): [11], (u'O', (1, 0.0509804, 0.0509804, 1)): [5], (u'sky blue', (0.529412, 0.807843, 0.921569, 1)): [1], (u'tan', (0.823529, 0.705882, 0.54902, 1)): [0], (u'H', (1, 1, 1, 1)): [7], (u'C', (0.564706, 0.564706, 0.564706, 1)): [8], (u'yellow', (1, 1, 0, 1)): [10]})
	viewerInfo = {'cameraAttrs': {'center': (23.085, 26.1925, -13.3225), 'fieldOfView': 10.8782, 'nearFar': (-0.890926, -25.7541), 'ortho': False, 'eyeSeparation': 50.8, 'focal': -13.3225}, 'viewerAttrs': {'silhouetteColor': None, 'clipping': False, 'showSilhouette': False, 'showShadows': False, 'viewSize': 12.569, 'labelsOnTop': True, 'depthCueRange': (0.5, 1), 'silhouetteWidth': 2, 'singleLayerTransparency': True, 'shadowTextureSize': 2048, 'backgroundImage': [None, 1, 2, 1, 0, 0], 'backgroundGradient': [('Chimera default', [(1, 1, 1, 1), (0, 0, 1, 1)], 1), 1, 0, 0], 'depthCue': True, 'highlight': 0, 'scaleFactor': 1, 'angleDependentTransparency': True, 'backgroundMethod': 0}, 'viewerHL': 11, 'cameraMode': 'mono', 'detail': 1.5, 'viewerFog': None, 'viewerBG': None}

	replyobj.status("Initializing session restore...", blankAfter=0,
		secondary=True)
	from SimpleSession.versions.v58 import expandSummary
	init(dict(enumerate(expandSummary(colorInfo))))
	replyobj.status("Restoring colors...", blankAfter=0,
		secondary=True)
	restoreColors(colors, materials)
	replyobj.status("Restoring molecules...", blankAfter=0,
		secondary=True)
	restoreMolecules(molInfo, resInfo, atomInfo, bondInfo, crdInfo)
	replyobj.status("Restoring surfaces...", blankAfter=0,
		secondary=True)
	restoreSurfaces(surfInfo)
	replyobj.status("Restoring VRML models...", blankAfter=0,
		secondary=True)
	restoreVRML(vrmlInfo)
	replyobj.status("Restoring pseudobond groups...", blankAfter=0,
		secondary=True)
	restorePseudoBondGroups(pbInfo)
	replyobj.status("Restoring model associations...", blankAfter=0,
		secondary=True)
	restoreModelAssociations(modelAssociations)
	replyobj.status("Restoring camera...", blankAfter=0,
		secondary=True)
	restoreViewer(viewerInfo)

try:
	restoreCoreModels()
except:
	reportRestoreError("Error restoring core models")

	replyobj.status("Restoring extension info...", blankAfter=0,
		secondary=True)


try:
	import StructMeasure
	from StructMeasure.DistMonitor import restoreDistances
	registerAfterModelsCB(restoreDistances, 1)
except:
	reportRestoreError("Error restoring distances in session")


def restoreMidasBase():
	formattedPositions = {'session-start': (1.0, 12.569, (23.085, 26.1925, -13.3225), (-0.890849, -25.7541), -13.3225, {(1, 0): ((1.94769, 33.5553, -43.2466), (-0.33399487519766125, -0.7373547244760298, -0.5871587805990616, 117.35300000000001)), (0, 0): ((1.94769, 33.5553, -43.2466), (-0.33399487519766125, -0.7373547244760298, -0.5871587805990616, 117.35300000000001))}, {(1, 0, 'Molecule'): (False, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, False, 5.0), (0, 0, 'Molecule'): (False, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, False, 5.0)}, 4, (23.085172869174958, 26.192526226127022, -13.322534957116437), False, 10.8782)}
	import Midas
	Midas.restoreMidasBase(formattedPositions)
try:
	restoreMidasBase()
except:
	reportRestoreError('Error restoring Midas base state')


def restoreMidasText():
	from Midas import midas_text
	midas_text.aliases = {}
	midas_text.userSurfCategories = {}

try:
	restoreMidasText()
except:
	reportRestoreError('Error restoring Midas text state')

geomData = {'AxisManager': {}, 'CentroidManager': {}, 'PlaneManager': {}}

try:
	from StructMeasure.Geometry import geomManager
	geomManager._restoreSession(geomData)
except:
	reportRestoreError("Error restoring geometry objects in session")


def restoreSession_RibbonStyleEditor():
	import SimpleSession
	import RibbonStyleEditor
	userScalings = []
	userXSections = []
	userResidueClasses = []
	residueData = [(2, 'Chimera default', 'rounded', u'unknown'), (3, 'Chimera default', 'rounded', u'unknown')]
	flags = RibbonStyleEditor.NucleicDefault1
	SimpleSession.registerAfterModelsCB(RibbonStyleEditor.restoreState,
				(userScalings, userXSections,
				userResidueClasses, residueData, flags))
try:
	restoreSession_RibbonStyleEditor()
except:
	reportRestoreError("Error restoring RibbonStyleEditor state")

trPickle = 'gAJjQW5pbWF0ZS5UcmFuc2l0aW9ucwpUcmFuc2l0aW9ucwpxASmBcQJ9cQMoVQxjdXN0b21fc2NlbmVxBGNBbmltYXRlLlRyYW5zaXRpb24KVHJhbnNpdGlvbgpxBSmBcQZ9cQcoVQZmcmFtZXNxCEsBVQ1kaXNjcmV0ZUZyYW1lcQlLAVUKcHJvcGVydGllc3EKXXELVQNhbGxxDGFVBG5hbWVxDVUMY3VzdG9tX3NjZW5lcQ5VBG1vZGVxD1UGbGluZWFycRB1YlUIa2V5ZnJhbWVxEWgFKYFxEn1xEyhoCEsUaAlLAWgKXXEUaAxhaA1VCGtleWZyYW1lcRVoD2gQdWJVBXNjZW5lcRZoBSmBcRd9cRgoaAhLAWgJSwFoCl1xGWgMYWgNVQVzY2VuZXEaaA9oEHVidWIu'
scPickle = 'gAJjQW5pbWF0ZS5TY2VuZXMKU2NlbmVzCnEBKYFxAn1xA1UHbWFwX2lkc3EEfXNiLg=='
kfPickle = 'gAJjQW5pbWF0ZS5LZXlmcmFtZXMKS2V5ZnJhbWVzCnEBKYFxAn1xA1UHZW50cmllc3EEXXEFc2Iu'
def restoreAnimation():
	'A method to unpickle and restore animation objects'
	# Scenes must be unpickled after restoring transitions, because each
	# scene links to a 'scene' transition. Likewise, keyframes must be 
	# unpickled after restoring scenes, because each keyframe links to a scene.
	# The unpickle process is left to the restore* functions, it's 
	# important that it doesn't happen prior to calling those functions.
	import SimpleSession
	from Animate.Session import restoreTransitions
	from Animate.Session import restoreScenes
	from Animate.Session import restoreKeyframes
	SimpleSession.registerAfterModelsCB(restoreTransitions, trPickle)
	SimpleSession.registerAfterModelsCB(restoreScenes, scPickle)
	SimpleSession.registerAfterModelsCB(restoreKeyframes, kfPickle)
try:
	restoreAnimation()
except:
	reportRestoreError('Error in Animate.Session')

def restoreLightController():
	import Lighting
	Lighting._setFromParams({'ratio': 1.25, 'brightness': 1.16, 'material': [30.0, (0.85, 0.85, 0.85), 1.0], 'back': [(0.35740674433659325, 0.6604015517481455, -0.6604015517481455), (1.0, 1.0, 1.0), 0.0], 'mode': 'two-point', 'key': [(-0.35740674433659325, 0.6604015517481455, 0.6604015517481455), (1.0, 1.0, 1.0), 1.0], 'contrast': 0.83, 'fill': [(0.25056280708573153, 0.25056280708573153, 0.9351131265310294), (1.0, 1.0, 1.0), 0.0]})
try:
	restoreLightController()
except:
	reportRestoreError("Error restoring lighting parameters")


try:
	from BuildStructure.gui import _sessionRestore
	_sessionRestore({'mapped': 0})
except:
	reportRestoreError("Failure restoring Build Structure")


def restoreRemainder():
	from SimpleSession.versions.v58 import restoreWindowSize, \
	     restoreOpenStates, restoreSelections, restoreFontInfo, \
	     restoreOpenModelsAttrs, restoreModelClip

	curSelIds =  []
	savedSels = [('seed', [54]), ('target', [12])]
	openModelsAttrs = { 'cofrMethod': 4 }
	windowSize = (632, 339)
	xformMap = {0: (((-0.192499, 0.91709, 0.349127), 173.521), (54.1613, 24.3085, -33.9908), True), 1: (((-0.192499, 0.91709, 0.349127), 173.521), (54.1613, 24.3085, -33.9908), True)}
	fontInfo = {'face': ('Sans Serif', 'Normal', 16)}
	clipPlaneInfo = {}

	replyobj.status("Restoring window...", blankAfter=0,
		secondary=True)
	restoreWindowSize(windowSize)
	replyobj.status("Restoring open states...", blankAfter=0,
		secondary=True)
	restoreOpenStates(xformMap)
	replyobj.status("Restoring font info...", blankAfter=0,
		secondary=True)
	restoreFontInfo(fontInfo)
	replyobj.status("Restoring selections...", blankAfter=0,
		secondary=True)
	restoreSelections(curSelIds, savedSels)
	replyobj.status("Restoring openModel attributes...", blankAfter=0,
		secondary=True)
	restoreOpenModelsAttrs(openModelsAttrs)
	replyobj.status("Restoring model clipping...", blankAfter=0,
		secondary=True)
	restoreModelClip(clipPlaneInfo)

	replyobj.status("Restoring remaining extension info...", blankAfter=0,
		secondary=True)
try:
	restoreRemainder()
except:
	reportRestoreError("Error restoring post-model state")
from SimpleSession.versions.v58 import makeAfterModelsCBs
makeAfterModelsCBs()

from SimpleSession.versions.v58 import endRestore
replyobj.status('Finishing restore...', blankAfter=0, secondary=True)
endRestore({})
replyobj.status('', secondary=True)
replyobj.status('Restore finished.')

